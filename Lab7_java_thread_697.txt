1.6) 3

Q1) pro_Row = tRow;
    pro_Col = tCol;
    dataA = a;
    dataB = b;
    dataC = c;

Q2) public

Q3) for (int i = 0; i < dataA.data.length; i++) {
        for (int j = 0; j < dataB.data.length; j++) {
            dataC.data[pro_Row][i] += dataA.data[pro_Row][j] * dataB.data[j][i];
        }   
    }

Q4) ArrayList<Thread> threads = new ArrayList<Thread>();
        for (int i = 0; i < matC_r; i ++) {
            Thread mat = new Thread(new MatrixMulThread(i, i, matA, matB, matC));
            mat.start();
            threads.add(mat);    
        }

Q5) for (Thread t : threads) {
        try {
            t.join();
        }
        catch (Exception e) {
            System.out.println(e);
        }
    }
