1.6) 3

Q1) processing_row = tRow;
    processing_col = tCol;
    datA = a;
    datB = b;
    datC = c;

Q2) public

Q3) for (int i = 0; i < datA.data.length; i++) {
        for (int j = 0; j < datB.data.length; j++) {
            datC.data[processing_row][i] += datA.data[processing_row][j] * datB.data[j][i];
        }   
    }

Q4) ArrayList<Thread> threads = new ArrayList<Thread>();
        for (int i = 0; i < matC_r; i ++) {
            Thread mat = new Thread(new MatrixMulThread(i, i, matA, matB, matC));
            mat.start();
            threads.add(mat);    
        }

Q5) for (Thread t : threads) {
        try {
            t.join();
        }
        catch (Exception e) {
            System.out.println(e);
        }
    }